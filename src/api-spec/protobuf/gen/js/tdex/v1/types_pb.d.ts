/* eslint-disable */
// @generated by protobuf-ts 2.8.2 with parameter add_pb_suffix,eslint_disable,ts_nocheck,long_type_string,output_javascript
// @generated from protobuf file "tdex/v1/types.proto" (package "tdex.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * Custom Types
 *
 * @generated from protobuf message tdex.v1.Fee
 */
export interface Fee {
    /**
     * @generated from protobuf field: int64 basis_point = 1;
     */
    basisPoint: string;
    /**
     * @generated from protobuf field: tdex.v1.Fixed fixed = 2;
     */
    fixed?: Fixed;
}
/**
 * @generated from protobuf message tdex.v1.Fixed
 */
export interface Fixed {
    /**
     * @generated from protobuf field: int64 base_fee = 1;
     */
    baseFee: string;
    /**
     * @generated from protobuf field: int64 quote_fee = 2;
     */
    quoteFee: string;
}
/**
 * @generated from protobuf message tdex.v1.Balance
 */
export interface Balance {
    /**
     * @generated from protobuf field: uint64 base_amount = 1;
     */
    baseAmount: string;
    /**
     * @generated from protobuf field: uint64 quote_amount = 2;
     */
    quoteAmount: string;
}
/**
 * @generated from protobuf message tdex.v1.BalanceWithFee
 */
export interface BalanceWithFee {
    /**
     * @generated from protobuf field: tdex.v1.Balance balance = 1;
     */
    balance?: Balance;
    /**
     * @generated from protobuf field: tdex.v1.Fee fee = 2;
     */
    fee?: Fee;
}
/**
 * @generated from protobuf message tdex.v1.Market
 */
export interface Market {
    /**
     * @generated from protobuf field: string base_asset = 1;
     */
    baseAsset: string;
    /**
     * @generated from protobuf field: string quote_asset = 2;
     */
    quoteAsset: string;
}
/**
 * @generated from protobuf message tdex.v1.MarketWithFee
 */
export interface MarketWithFee {
    /**
     * @generated from protobuf field: tdex.v1.Market market = 1;
     */
    market?: Market;
    /**
     * @generated from protobuf field: tdex.v1.Fee fee = 2;
     */
    fee?: Fee;
}
/**
 * @generated from protobuf message tdex.v1.Price
 */
export interface Price {
    /**
     * @generated from protobuf field: double base_price = 1;
     */
    basePrice: number;
    /**
     * @generated from protobuf field: double quote_price = 2;
     */
    quotePrice: number;
}
/**
 * @generated from protobuf message tdex.v1.Preview
 */
export interface Preview {
    /**
     * @generated from protobuf field: tdex.v1.Price price = 1;
     */
    price?: Price;
    /**
     * @generated from protobuf field: tdex.v1.Fee fee = 2;
     */
    fee?: Fee;
    /**
     * @generated from protobuf field: uint64 amount = 3;
     */
    amount: string;
    /**
     * @generated from protobuf field: string asset = 4;
     */
    asset: string;
    /**
     * @generated from protobuf field: tdex.v1.Balance balance = 5;
     */
    balance?: Balance;
}
/**
 * @generated from protobuf enum tdex.v1.TradeType
 */
export declare enum TradeType {
    /**
     * @generated from protobuf enum value: TRADE_TYPE_BUY = 0;
     */
    BUY = 0,
    /**
     * @generated from protobuf enum value: TRADE_TYPE_SELL = 1;
     */
    SELL = 1
}
/**
 * @generated from protobuf enum tdex.v1.ContentType
 */
export declare enum ContentType {
    /**
     * @generated from protobuf enum value: CONTENT_TYPE_JSON = 0;
     */
    JSON = 0,
    /**
     * @generated from protobuf enum value: CONTENT_TYPE_GRPC = 1;
     */
    GRPC = 1,
    /**
     * @generated from protobuf enum value: CONTENT_TYPE_GRPCWEB = 2;
     */
    GRPCWEB = 2,
    /**
     * @generated from protobuf enum value: CONTENT_TYPE_GRPCWEBTEXT = 3;
     */
    GRPCWEBTEXT = 3
}
declare class Fee$Type extends MessageType<Fee> {
    constructor();
    create(value?: PartialMessage<Fee>): Fee;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Fee): Fee;
    internalBinaryWrite(message: Fee, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.Fee
 */
export declare const Fee: Fee$Type;
declare class Fixed$Type extends MessageType<Fixed> {
    constructor();
    create(value?: PartialMessage<Fixed>): Fixed;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Fixed): Fixed;
    internalBinaryWrite(message: Fixed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.Fixed
 */
export declare const Fixed: Fixed$Type;
declare class Balance$Type extends MessageType<Balance> {
    constructor();
    create(value?: PartialMessage<Balance>): Balance;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Balance): Balance;
    internalBinaryWrite(message: Balance, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.Balance
 */
export declare const Balance: Balance$Type;
declare class BalanceWithFee$Type extends MessageType<BalanceWithFee> {
    constructor();
    create(value?: PartialMessage<BalanceWithFee>): BalanceWithFee;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BalanceWithFee): BalanceWithFee;
    internalBinaryWrite(message: BalanceWithFee, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.BalanceWithFee
 */
export declare const BalanceWithFee: BalanceWithFee$Type;
declare class Market$Type extends MessageType<Market> {
    constructor();
    create(value?: PartialMessage<Market>): Market;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Market): Market;
    internalBinaryWrite(message: Market, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.Market
 */
export declare const Market: Market$Type;
declare class MarketWithFee$Type extends MessageType<MarketWithFee> {
    constructor();
    create(value?: PartialMessage<MarketWithFee>): MarketWithFee;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MarketWithFee): MarketWithFee;
    internalBinaryWrite(message: MarketWithFee, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.MarketWithFee
 */
export declare const MarketWithFee: MarketWithFee$Type;
declare class Price$Type extends MessageType<Price> {
    constructor();
    create(value?: PartialMessage<Price>): Price;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Price): Price;
    internalBinaryWrite(message: Price, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.Price
 */
export declare const Price: Price$Type;
declare class Preview$Type extends MessageType<Preview> {
    constructor();
    create(value?: PartialMessage<Preview>): Preview;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Preview): Preview;
    internalBinaryWrite(message: Preview, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tdex.v1.Preview
 */
export declare const Preview: Preview$Type;
export {};
